from loader import dp, types
from data.database import users_db as db
from aiogram.types.chat import ChatType
from markups import reply, inline
from states import UserParams, GroupParams

users_dict_for_searching_olympiads = {}
num_to_subject = {1: '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫', 2: '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', 3: '–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ —è–∑—ã–∫–∏', 6: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 7: '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', 8: '–ò—Å—Ç–æ—Ä–∏—è', 9: '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ', 10: '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è', 11: '–ë–∏–æ–ª–æ–≥–∏—è', 12: '–§–∏–∑–∏–∫–∞', 13: '–•–∏–º–∏—è', 14: '–≠–∫–æ–Ω–æ–º–∏–∫–∞', 15: '–ü—Ä–∞–≤–æ', 16: '–û–ë–ñ', 17: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è', 18: '–ò—Å–∫—É—Å—Å—Ç–≤–æ', 19: '–§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞', 20: '–ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è', 21: '–≠–∫–æ–ª–æ–≥–∏—è', 22: '–ò–ó–û', 23: '–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ', 24: '–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞', 27: '–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞', 28: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è', 31: '–ß–µ—Ä—á–µ–Ω–∏–µ'}

@dp.message_handler(ChatType.is_private, commands='start')
async def send_welcome(message: types.Message):
    user_id = message.from_user.id
    user_name = message.from_user.username
    await db.add_new_user(user_id, user_name)
    await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ–ª–∏–º–ø–∏–∞–¥—ã –ø–æ –≤–∞–∂–Ω—ã–º –¥–ª—è —Ç–µ–±—è –ø—Ä–µ–¥–º–µ—Ç–∞–º! –í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /help, —á—Ç–æ–±—ã –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º", reply_markup=reply.default_user_markup)

@dp.message_handler(ChatType.is_private, commands='help')
async def tell_about_functions(message: types.Message):
    await message.answer("–£ –º–µ–Ω—è –µ—Å—Ç—å 2 –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
                        "1. 'üîç –ù–∞–π—Ç–∏ –æ–ª–∏–º–ø–∏–∞–¥—É'\n"
                        "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥–µ.\n"
                        "–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–õ–æ–º–æ–Ω–æ—Å–æ–≤</b>, <b>–í—ã—Å—à–∞—è –ø—Ä–æ–±–∞</b>.\n"
                        "2. 'üîç –û–ª–∏–º–ø–∏–∞–¥—ã –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É'\n"
                        "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –æ–ª–∏–º–ø–∏–∞–¥—ã –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –≤—ã—à–µ 8.0, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–Ω–µ—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–¥–µ–ª—é.")



@dp.message_handler(ChatType.is_private, text = 'üîç –ù–∞–π—Ç–∏ –æ–ª–∏–º–ø–∏–∞–¥—É')
async def find_an_olympiad(message: types.Message):
    await message.answer('–í–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–ª–∏–º–ø–∏–∞–¥—ã:')
    await UserParams.Setolympiad.set()

@dp.message_handler(state=UserParams.Setolympiad)
async def takeolimpyad(message: types.Message, state: UserParams.Setolympiad):
    user_id = message.from_user.id
    text = message.text
    users_dict_for_searching_olympiads[user_id] = [str(text)]
    await message.answer(f"–í—ã–±–µ—Ä–µ—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ª–∏–º–ø–∏–∞–¥, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É <b>{text}</b>:", reply_markup=inline.numbers_1_8)
    await state.finish()

@dp.callback_query_handler(text_contains='number_')
async def takenumber_1_8(call: types.CallbackQuery):
    await call.message.edit_reply_markup(reply_markup=None)
    user_id = call.from_user.id
    num = call.data.split('_')[1]
    users_dict_for_searching_olympiads[user_id].append(num)
    #'''–ú–ï–°–¢–û –î–õ–Ø –ü–ê–†–°–ï–†–ê'''
    users_dict_for_searching_olympiads.pop(user_id, None)

@dp.message_handler(ChatType.is_private, text = 'üîç –û–ª–∏–º–ø–∏–∞–¥—ã –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É')
async def find_subjects_olympiads(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–µ—Ç–µ –ø—Ä–µ–¥–º–µ—Ç, –æ–± –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:')
    await message.answer('–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏:', reply_markup=inline.technical_olympiads)
    await message.answer('–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ –Ω–∞—É–∫–∏:', reply_markup=inline.humanitarian_olympiads)

@dp.callback_query_handler(text_contains='olymp_')
async def take_subject(call: types.CallbackQuery):
    await call.message.edit_reply_markup(reply_markup=None)
    unicum_num_subject = int(call.data.split('_')[1])
    await call.message.answer(f'–í–æ—Ç, –∫–∞–∫–∏–µ –æ–ª–∏–º–ø–∏–∞–¥—ã –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É <b>{num_to_subject[unicum_num_subject]}</b> —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –±–æ–ª—å—à–µ 8.0 –º–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏:')
    # '''–ú–µ—Å—Ç–æ –¥–ª—è –ø–∞—Ä—Å–µ—Ä–∞'''










